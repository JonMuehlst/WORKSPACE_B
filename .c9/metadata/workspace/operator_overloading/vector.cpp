{"filter":false,"title":"vector.cpp","tooltip":"/operator_overloading/vector.cpp","undoManager":{"mark":100,"position":100,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":86,"column":18},"end":{"row":86,"column":19}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":86,"column":19},"end":{"row":86,"column":20}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":86,"column":20},"end":{"row":86,"column":21}},"text":"ב"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":86,"column":21},"end":{"row":86,"column":22}},"text":"ד"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":86,"column":22},"end":{"row":86,"column":23}},"text":"י"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":86,"column":23},"end":{"row":86,"column":24}},"text":"ק"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":86,"column":24},"end":{"row":86,"column":25}},"text":"ו"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":86,"column":25},"end":{"row":86,"column":26}},"text":"ת"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":25},"end":{"row":86,"column":26}},"text":"ת"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":24},"end":{"row":86,"column":25}},"text":"ו"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":23},"end":{"row":86,"column":24}},"text":"ק"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":22},"end":{"row":86,"column":23}},"text":"י"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":21},"end":{"row":86,"column":22}},"text":"ד"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":20},"end":{"row":86,"column":21}},"text":"ב"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":19},"end":{"row":86,"column":20}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":18},"end":{"row":86,"column":19}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":17},"end":{"row":86,"column":18}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":16},"end":{"row":86,"column":17}},"text":"ד"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":15},"end":{"row":86,"column":16}},"text":"ו"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":14},"end":{"row":86,"column":15}},"text":"ע"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":13},"end":{"row":86,"column":14}},"text":" "},{"action":"removeText","range":{"start":{"row":86,"column":12},"end":{"row":86,"column":13}},"text":"ם"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":11},"end":{"row":86,"column":12}},"text":"י"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":10},"end":{"row":86,"column":11}},"text":"ל"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":9},"end":{"row":86,"column":10}},"text":"ש"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":8},"end":{"row":86,"column":9}},"text":"ה"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":7},"end":{"row":86,"column":8}},"text":"ל"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":6},"end":{"row":86,"column":7}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":5},"end":{"row":86,"column":6}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":4},"end":{"row":86,"column":5}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":86,"column":0},"end":{"row":86,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":85,"column":4},"end":{"row":86,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":98,"column":0},"end":{"row":98,"column":38}},"text":"    EXPECT_DOUBLE_EQ(7.5 - 3.5, v1.z);"},{"action":"removeLines","range":{"start":{"row":95,"column":0},"end":{"row":98,"column":0}},"nl":"\n","lines":["    ","    EXPECT_DOUBLE_EQ(5.5 - 1.5, v1.x);","    EXPECT_DOUBLE_EQ(6.5 - 2.5, v1.y);"]},{"action":"removeText","range":{"start":{"row":94,"column":4},"end":{"row":94,"column":17}},"text":"v1 = v1 - v2;"},{"action":"removeText","range":{"start":{"row":94,"column":4},"end":{"row":95,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":106,"column":0},"end":{"row":106,"column":37}},"text":"    EXPECT_DOUBLE_EQ(a + b + c, ans);"},{"action":"removeLines","range":{"start":{"row":101,"column":0},"end":{"row":106,"column":0}},"nl":"\n","lines":["    ","    double a = 1.5 * 9.5;","    double b = 2.5 * 5.5;","    double c = 3.5 * 4.5;","    "]},{"action":"removeText","range":{"start":{"row":100,"column":4},"end":{"row":100,"column":23}},"text":"double ans = v2*v3;"},{"action":"removeText","range":{"start":{"row":100,"column":4},"end":{"row":101,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":110,"column":0},"end":{"row":110,"column":41}},"text":"    EXPECT_DOUBLE_EQ(4.5 * scalar, v3.z);"},{"action":"removeLines","range":{"start":{"row":107,"column":0},"end":{"row":110,"column":0}},"nl":"\n","lines":["    ","    EXPECT_DOUBLE_EQ(9.5 * scalar, v3.x);","    EXPECT_DOUBLE_EQ(5.5 * scalar, v3.y);"]},{"action":"removeText","range":{"start":{"row":106,"column":4},"end":{"row":106,"column":19}},"text":"v3 = v3*scalar;"},{"action":"removeText","range":{"start":{"row":106,"column":4},"end":{"row":107,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":116,"column":0},"end":{"row":116,"column":41}},"text":"    EXPECT_DOUBLE_EQ(4.5 / scalar, v3.z);"},{"action":"removeLines","range":{"start":{"row":113,"column":0},"end":{"row":116,"column":0}},"nl":"\n","lines":["    ","    EXPECT_DOUBLE_EQ(9.5 / scalar, v3.x);","    EXPECT_DOUBLE_EQ(5.5 / scalar, v3.y);"]},{"action":"removeText","range":{"start":{"row":112,"column":4},"end":{"row":112,"column":19}},"text":"v3 = v3/scalar;"},{"action":"removeText","range":{"start":{"row":112,"column":4},"end":{"row":113,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":145,"column":0},"end":{"row":145,"column":32}},"text":"    EXPECT_DOUBLE_EQ(4.5, v2.z);"},{"action":"removeLines","range":{"start":{"row":142,"column":0},"end":{"row":145,"column":0}},"nl":"\n","lines":["    ","    EXPECT_DOUBLE_EQ(2.5, v2.x);","    EXPECT_DOUBLE_EQ(3.5, v2.y);"]},{"action":"removeText","range":{"start":{"row":141,"column":4},"end":{"row":141,"column":9}},"text":"v2++;"},{"action":"removeText","range":{"start":{"row":141,"column":4},"end":{"row":142,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":135,"column":4},"end":{"row":135,"column":26}},"text":"EXPECT_TRUE(v1 == v1);"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":130,"column":0},"end":{"row":130,"column":33}},"text":"    EXPECT_DOUBLE_EQ(7.5, v1[3]);"},{"action":"removeLines","range":{"start":{"row":128,"column":0},"end":{"row":130,"column":0}},"nl":"\n","lines":["    EXPECT_DOUBLE_EQ(5.5, v1[1]);","    EXPECT_DOUBLE_EQ(6.5, v1[2]);"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":122,"column":0},"end":{"row":122,"column":38}},"text":"    EXPECT_DOUBLE_EQ(7.5 + 3.5, v3.z);"},{"action":"removeLines","range":{"start":{"row":119,"column":0},"end":{"row":122,"column":0}},"nl":"\n","lines":["    ","    EXPECT_DOUBLE_EQ(5.5 + 1.5, v3.x);","    EXPECT_DOUBLE_EQ(6.5 + 2.5, v3.y);"]},{"action":"removeText","range":{"start":{"row":118,"column":4},"end":{"row":118,"column":17}},"text":"v3 = v1 + v2;"},{"action":"removeText","range":{"start":{"row":118,"column":4},"end":{"row":119,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":6},"end":{"row":15,"column":7}},"text":"&"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":21,"column":6},"end":{"row":21,"column":7}},"text":"&"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":33,"column":6},"end":{"row":33,"column":7}},"text":"&"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":39,"column":6},"end":{"row":39,"column":7}},"text":"&"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":45,"column":6},"end":{"row":45,"column":7}},"text":"&"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":45,"column":5},"end":{"row":45,"column":6}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":45,"column":4},"end":{"row":45,"column":5}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":45,"column":3},"end":{"row":45,"column":4}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":45,"column":2},"end":{"row":45,"column":3}},"text":"c"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":45,"column":1},"end":{"row":45,"column":2}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":45,"column":1},"end":{"row":45,"column":2}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":45,"column":2},"end":{"row":45,"column":3}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":45,"column":3},"end":{"row":45,"column":4}},"text":"d"}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":139,"column":0},"action":"remove","lines":["#include \"gtest/gtest.h\" // google test","#include \"vector.h\"","#include <assert.h>","","vector::vector(){","    ","    ","    ","}","","vector::vector(double x, double y, double z){","    ","    ","}","","vector vector::operator+ (const vector& v){","    ","    ","    ","}","","vector vector::operator- (const vector& v){","    ","    ","    ","}","","double vector::operator* (const vector& v){","    ","    ","    ","}","","vector vector::operator* (const double scalar){","    ","    ","    ","}","","vector vector::operator/ (const double scalar){","    ","    ","    ","}","","void vector::operator= (const vector& v){","    ","    ","    ","}","","","","","","","","","","// ==========================================================================================","// ","//                                      Tests","// ","// ==========================================================================================","","class vector_test_case : public ::testing::Test {","    ","    public:","        vector v1,v2,v3;","        double scalar;","    ","        virtual void SetUp(){","            v1 = vector(5.5,6.5,7.5);","            v2 = vector(1.5,2.5,3.5);","            v3 = vector(9.5,5.5,4.5);","            ","            scalar = 5.5;","        }","    ","};","","","TEST_F(vector_test_case, plus){","    ","    v1 = v1 + v2;","    ","    EXPECT_DOUBLE_EQ(5.5 + 1.5, v1.x);","    EXPECT_DOUBLE_EQ(6.5 + 2.5, v1.y);","    EXPECT_DOUBLE_EQ(7.5 + 3.5, v1.z);","    ","}","","TEST_F(vector_test_case, minus){","    ","    ","    ","}","","TEST_F(vector_test_case, dot_product){","    ","    ","    ","}","","TEST_F(vector_test_case, scalar_multiplication){","    ","    ","    ","}","","TEST_F(vector_test_case, scalar_division){","    ","    ","    ","}","","TEST_F(vector_test_case, assignment){","    ","    ","    ","}","","TEST_F(vector_test_case, subscripting){","    ","","}","","TEST_F(vector_test_case, equality){","    ","    ","    ","}","","TEST_F(vector_test_case, increment){","    ","    ","    ","}","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":473,"column":0},"action":"insert","lines":["#include <iostream>","#include <string>","#include <ostream>","#include \"gtest/gtest.h\" // google test","#include \"vector.h\"","#include <assert.h>","","vector::vector(){","    ","    this->x = 0;","    this->y = 0;","    this->z = 0;","    ","}","","vector::vector(double x, double y, double z){","    ","    this->x = x;","    this->y = y;","    this->z = z;","    ","}","","const vector vector::operator/ (const double scalar){","    ","    vector ans = vector();","    ans.x = this->x / scalar;","    ans.y = this->y / scalar;","    ans.z = this->z / scalar;","    ","    return ans;    ","    ","}","","const double operator* (const vector& v1, const vector& v2){","    ","    double a = v1.x*v2.x;","    double b = v1.y*v2.y;","    double c = v1.z*v2.z;","    ","    return a + b + c;","    ","}","vector& vector::operator= (const vector& v){","    ","    this->x = v.x;","    this->y = v.y;","    this->z = v.z;","    ","    return *this;","}","","vector& vector::operator+= (const vector& v){","    ","    this->x += v.x;","    this->y += v.y;","    this->z += v.z;","    ","    return *this;","","}","","vector& vector::operator-= (const vector& v){","    ","    this->x -= v.x;","    this->y -= v.y;","    this->z -= v.z;","    ","    return *this;","    ","}","","vector& vector::operator*= (const double scalar){","    ","    *this = *this * scalar;","    ","    return *this;","    ","}","    ","bool vector::operator== (const vector& v){","    ","    double eps = 0.0001;","    ","    double a = this->x - v.x; ","    double b = this->y - v.y;","    double c = this->z - v.z;","    ","    if(a<0)","        a *= -1;","    if(b<0)","        b *= -1;","    if(c<0)","        c *= -1;","        ","    if( (a < eps) && (b < eps) && (c < eps) )","        return true;","        ","    return false;","    ","}","","bool vector::operator!= (const vector& v){","    ","    return (!(*this == v));","    ","}","","vector vector::operator++ (int i = 1){","    ","    this->x += 1;","    this->y += 1;","    this->z += 1;","    ","    return *this;","    ","}","","const vector vector::operator- () const{","    ","    vector ans = vector();","    ans.x = -this->x;","    ans.y = -this->y;","    ans.z = -this->z;","","    return ans;    ","    ","}","","double vector::operator[] (const int i){","    ","    assert( (1 <= i) && (i <= 3) );","    ","    double ans = 0;","    ","    switch (i) {","        case 1:","            ans = this->x;","            break;","        case 2:","            ans = this->y;","            break;","        case 3:","            ans = this->z;","            break;","    }","    ","    return ans;","}","","const vector operator+ (const vector& v1, const vector& v2){","    ","    vector ans = vector();","    ans.x = v1.x + v2.x;","    ans.y = v1.y + v2.y;","    ans.z = v1.z + v2.z;","    ","    return ans;","    ","}","","const vector operator+ (const vector& v1, const double scalar){","    ","    vector ans = vector();","    ans.x = v1.x + scalar;","    ans.y = v1.y + scalar;","    ans.z = v1.z + scalar;","    ","    return ans;","    ","}","","const vector operator+ (const double scalar, const vector& v2){","    ","    vector ans = vector();","    ans.x = scalar + v2.x;","    ans.y = scalar + v2.y;","    ans.z = scalar + v2.z;","    ","    return ans;    ","    ","}","","const vector operator- (const vector& v1, const vector& v2){","    ","    vector ans = vector();","    ans.x = v1.x - v2.x;","    ans.y = v1.y - v2.y;","    ans.z = v1.z - v2.z;","","    return ans;    ","    ","}","","const vector operator- (const vector& v1, const double scalar){","    ","    vector ans = vector();","    ans.x = v1.x - scalar;","    ans.y = v1.y - scalar;","    ans.z = v1.z - scalar;","","    return ans;    ","    ","}","","const vector operator- (const double scalar, const vector& v2){","    ","    vector ans = vector();","    ans.x = scalar - v2.x;","    ans.y = scalar - v2.y;","    ans.z = scalar - v2.z;","","    return ans;    ","    ","}","","const vector operator* (const double scalar, const vector& v){","    ","    vector ans = vector();","    ans.x = v.x * scalar;","    ans.y = v.y * scalar;","    ans.z = v.z * scalar;","    ","    return ans;","    ","}","","const vector operator* (const vector& v, const double scalar){","    ","    vector ans = vector();","    ans.x = v.x * scalar;","    ans.y = v.y * scalar;","    ans.z = v.z * scalar;","    ","    return ans;","    ","}","","","std::ostream& operator<< (std::ostream& os, const vector& v){","    ","    return os << \"[\" << v.x << \"]\" << \"\\n\"","              << \"[\" << v.y << \"]\" << \"\\n\"            ","              << \"[\" << v.z << \"]\" << \"\\n\";            ","}","","","","","","","// ==========================================================================================","// ","//                                      Tests","// ","// ==========================================================================================","","class vector_test_case : public ::testing::Test {","    ","    public:","        vector v1,v2,v3;","        double scalar;","    ","        virtual void SetUp(){","            v1 = vector(5.5,6.5,7.5);","            v2 = vector(1.5,2.5,3.5);","            v3 = vector(9.5,5.5,4.5);","            ","            scalar = 5.5;","        }","    ","};","","","TEST_F(vector_test_case, plus){","    ","    v1 = v1 + v2;","    ","    EXPECT_DOUBLE_EQ(5.5 + 1.5, v1.x);","    EXPECT_DOUBLE_EQ(6.5 + 2.5, v1.y);","    EXPECT_DOUBLE_EQ(7.5 + 3.5, v1.z);","    ","}","","TEST_F(vector_test_case, lscalar_plus){","    ","    v1 = 5 + v2;","    ","    EXPECT_DOUBLE_EQ(5 + 1.5, v1.x);","    EXPECT_DOUBLE_EQ(5 + 2.5, v1.y);","    EXPECT_DOUBLE_EQ(5 + 3.5, v1.z);","    ","}","","TEST_F(vector_test_case, rscalar_plus){","    ","    v1 = v1 + 5;","    ","    EXPECT_DOUBLE_EQ(5.5 + 5, v1.x);","    EXPECT_DOUBLE_EQ(6.5 + 5, v1.y);","    EXPECT_DOUBLE_EQ(7.5 + 5, v1.z);","    ","}","","TEST_F(vector_test_case, minus){","    ","    v1 = v1 - v2;","    ","    EXPECT_DOUBLE_EQ(5.5 - 1.5, v1.x);","    EXPECT_DOUBLE_EQ(6.5 - 2.5, v1.y);","    EXPECT_DOUBLE_EQ(7.5 - 3.5, v1.z);","    ","}","","TEST_F(vector_test_case, rscalar_minus){","    ","    v1 = v2 - 5;","    ","    EXPECT_DOUBLE_EQ(1.5 - 5, v1.x);","    EXPECT_DOUBLE_EQ(2.5 - 5, v1.y);","    EXPECT_DOUBLE_EQ(3.5 - 5, v1.z);","    ","}","","TEST_F(vector_test_case, lscalar_minus){","    ","    v1 = 5 - v2;","    ","    EXPECT_DOUBLE_EQ(5 - 1.5, v1.x);","    EXPECT_DOUBLE_EQ(5 - 2.5, v1.y);","    EXPECT_DOUBLE_EQ(5 - 3.5, v1.z);","    ","}","","TEST_F(vector_test_case, unary_minus){","    ","    v3 = -v1;","    ","    EXPECT_DOUBLE_EQ(-5.5, v3.x);","    EXPECT_DOUBLE_EQ(-6.5, v3.y);","    EXPECT_DOUBLE_EQ(-7.5, v3.z);","    ","}","","TEST_F(vector_test_case, dot_product){","    ","    double ans = v2*v3;","    ","    double a = 1.5 * 9.5;","    double b = 2.5 * 5.5;","    double c = 3.5 * 4.5;","    ","    EXPECT_DOUBLE_EQ(a + b + c, ans);","    ","}","","TEST_F(vector_test_case, lscalar_multiplication){","    ","    v3 = scalar*v3;","    ","    EXPECT_DOUBLE_EQ(9.5 * scalar, v3.x);","    EXPECT_DOUBLE_EQ(5.5 * scalar, v3.y);","    EXPECT_DOUBLE_EQ(4.5 * scalar, v3.z);","    ","}","","TEST_F(vector_test_case, rscalar_multiplication){","    ","    v3 = v3*scalar;","    ","    EXPECT_DOUBLE_EQ(9.5 * scalar, v3.x);","    EXPECT_DOUBLE_EQ(5.5 * scalar, v3.y);","    EXPECT_DOUBLE_EQ(4.5 * scalar, v3.z);","    ","}","","TEST_F(vector_test_case, scalar_division){","    ","    v3 = v3/scalar;","    ","    EXPECT_DOUBLE_EQ(9.5 / scalar, v3.x);","    EXPECT_DOUBLE_EQ(5.5 / scalar, v3.y);","    EXPECT_DOUBLE_EQ(4.5 / scalar, v3.z);","    ","}","","TEST_F(vector_test_case, assignment){","    ","    v3 = v1 + v2;","    ","    EXPECT_DOUBLE_EQ(5.5 + 1.5, v3.x);","    EXPECT_DOUBLE_EQ(6.5 + 2.5, v3.y);","    EXPECT_DOUBLE_EQ(7.5 + 3.5, v3.z);","    ","}","","TEST_F(vector_test_case, plus_assignment){","    ","    v3 += v2;","    ","    EXPECT_DOUBLE_EQ(9.5 + 1.5, v3.x);","    EXPECT_DOUBLE_EQ(5.5 + 2.5, v3.y);","    EXPECT_DOUBLE_EQ(4.5 + 3.5, v3.z);","    ","}","","TEST_F(vector_test_case, minus_assignment){","    ","    v3 -= v2;","    ","    EXPECT_DOUBLE_EQ(9.5 - 1.5, v3.x);","    EXPECT_DOUBLE_EQ(5.5 - 2.5, v3.y);","    EXPECT_DOUBLE_EQ(4.5 - 3.5, v3.z);","    ","}","","TEST_F(vector_test_case, multiplication_assignment){","    ","    v1 *= 5;","    ","    EXPECT_DOUBLE_EQ(5.5 * 5, v1.x);","    EXPECT_DOUBLE_EQ(6.5 * 5, v1.y);","    EXPECT_DOUBLE_EQ(7.5 * 5, v1.z);","    ","}","","TEST_F(vector_test_case, subscripting){","    ","    EXPECT_DOUBLE_EQ(5.5, v1[1]);","    EXPECT_DOUBLE_EQ(6.5, v1[2]);","    EXPECT_DOUBLE_EQ(7.5, v1[3]);","}","","TEST_F(vector_test_case, equality){","    ","    EXPECT_TRUE(v1 == v1);","    ","}","","TEST_F(vector_test_case, inequality){","    ","    EXPECT_TRUE(v1 != v2);","    ","}","","TEST_F(vector_test_case, increment){","    ","    v2++;","    ","    EXPECT_DOUBLE_EQ(2.5, v2.x);","    EXPECT_DOUBLE_EQ(3.5, v2.y);","    EXPECT_DOUBLE_EQ(4.5, v2.z);","    ","}","","TEST_F(vector_test_case, output){","","    std::stringstream ss1;","    ss1 << v1;","    std::string str1 = ss1.str();","    ","    std::stringstream ss2;","    ss2 << \"[\" << v1.x << \"]\" << \"\\n\" ","        << \"[\" << v1.y << \"]\" << \"\\n\"  ","        << \"[\" << v1.z << \"]\" << \"\\n\" ;","    std::string str2 = ss2.str();","    ","    const char * cstr1 = str1.c_str();","    const char * cstr2 = str2.c_str();","    ","    EXPECT_STREQ(cstr2, cstr1);","    ","}",""]}]}],[{"group":"doc","deltas":[{"start":{"row":447,"column":0},"end":{"row":451,"column":32},"action":"remove","lines":["    v2++;","    ","    EXPECT_DOUBLE_EQ(2.5, v2.x);","    EXPECT_DOUBLE_EQ(3.5, v2.y);","    EXPECT_DOUBLE_EQ(4.5, v2.z);"]}]}],[{"group":"doc","deltas":[{"start":{"row":441,"column":0},"end":{"row":442,"column":4},"action":"remove","lines":["    EXPECT_TRUE(v1 != v2);","    "]}]}],[{"group":"doc","deltas":[{"start":{"row":435,"column":0},"end":{"row":436,"column":4},"action":"remove","lines":["    EXPECT_TRUE(v1 == v1);","    "]}]}],[{"group":"doc","deltas":[{"start":{"row":428,"column":0},"end":{"row":430,"column":33},"action":"remove","lines":["    EXPECT_DOUBLE_EQ(5.5, v1[1]);","    EXPECT_DOUBLE_EQ(6.5, v1[2]);","    EXPECT_DOUBLE_EQ(7.5, v1[3]);"]}]}],[{"group":"doc","deltas":[{"start":{"row":432,"column":0},"end":{"row":433,"column":0},"action":"insert","lines":["",""]},{"start":{"row":433,"column":0},"end":{"row":433,"column":0},"action":"insert","lines":[""]}]}],[{"group":"doc","deltas":[{"start":{"row":438,"column":0},"end":{"row":439,"column":0},"action":"insert","lines":["",""]},{"start":{"row":439,"column":0},"end":{"row":439,"column":0},"action":"insert","lines":[""]}]}],[{"group":"doc","deltas":[{"start":{"row":420,"column":0},"end":{"row":422,"column":36},"action":"remove","lines":["    EXPECT_DOUBLE_EQ(5.5 * 5, v1.x);","    EXPECT_DOUBLE_EQ(6.5 * 5, v1.y);","    EXPECT_DOUBLE_EQ(7.5 * 5, v1.z);"]}]}],[{"group":"doc","deltas":[{"start":{"row":418,"column":0},"end":{"row":419,"column":4},"action":"remove","lines":["    v1 *= 5;","    "]}]}],[{"group":"doc","deltas":[{"start":{"row":408,"column":0},"end":{"row":412,"column":38},"action":"remove","lines":["    v3 -= v2;","    ","    EXPECT_DOUBLE_EQ(9.5 - 1.5, v3.x);","    EXPECT_DOUBLE_EQ(5.5 - 2.5, v3.y);","    EXPECT_DOUBLE_EQ(4.5 - 3.5, v3.z);"]}]}],[{"group":"doc","deltas":[{"start":{"row":398,"column":5},"end":{"row":402,"column":38},"action":"remove","lines":["3 += v2;","    ","    EXPECT_DOUBLE_EQ(9.5 + 1.5, v3.x);","    EXPECT_DOUBLE_EQ(5.5 + 2.5, v3.y);","    EXPECT_DOUBLE_EQ(4.5 + 3.5, v3.z);"]}]}],[{"group":"doc","deltas":[{"start":{"row":398,"column":4},"end":{"row":398,"column":5},"action":"remove","lines":["v"]}]}],[{"group":"doc","deltas":[{"start":{"row":398,"column":0},"end":{"row":398,"column":4},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":397,"column":4},"end":{"row":398,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":388,"column":4},"end":{"row":392,"column":38},"action":"remove","lines":["v3 = v1 + v2;","    ","    EXPECT_DOUBLE_EQ(5.5 + 1.5, v3.x);","    EXPECT_DOUBLE_EQ(6.5 + 2.5, v3.y);","    EXPECT_DOUBLE_EQ(7.5 + 3.5, v3.z);"]}]}],[{"group":"doc","deltas":[{"start":{"row":378,"column":4},"end":{"row":382,"column":41},"action":"remove","lines":["v3 = v3/scalar;","    ","    EXPECT_DOUBLE_EQ(9.5 / scalar, v3.x);","    EXPECT_DOUBLE_EQ(5.5 / scalar, v3.y);","    EXPECT_DOUBLE_EQ(4.5 / scalar, v3.z);"]}]}],[{"group":"doc","deltas":[{"start":{"row":368,"column":4},"end":{"row":372,"column":41},"action":"remove","lines":["v3 = v3*scalar;","    ","    EXPECT_DOUBLE_EQ(9.5 * scalar, v3.x);","    EXPECT_DOUBLE_EQ(5.5 * scalar, v3.y);","    EXPECT_DOUBLE_EQ(4.5 * scalar, v3.z);"]}]}],[{"group":"doc","deltas":[{"start":{"row":358,"column":0},"end":{"row":362,"column":41},"action":"remove","lines":["    v3 = scalar*v3;","    ","    EXPECT_DOUBLE_EQ(9.5 * scalar, v3.x);","    EXPECT_DOUBLE_EQ(5.5 * scalar, v3.y);","    EXPECT_DOUBLE_EQ(4.5 * scalar, v3.z);"]}]}],[{"group":"doc","deltas":[{"start":{"row":346,"column":0},"end":{"row":352,"column":37},"action":"remove","lines":["    double ans = v2*v3;","    ","    double a = 1.5 * 9.5;","    double b = 2.5 * 5.5;","    double c = 3.5 * 4.5;","    ","    EXPECT_DOUBLE_EQ(a + b + c, ans);"]}]}],[{"group":"doc","deltas":[{"start":{"row":336,"column":4},"end":{"row":340,"column":33},"action":"remove","lines":["v3 = -v1;","    ","    EXPECT_DOUBLE_EQ(-5.5, v3.x);","    EXPECT_DOUBLE_EQ(-6.5, v3.y);","    EXPECT_DOUBLE_EQ(-7.5, v3.z);"]}]}],[{"group":"doc","deltas":[{"start":{"row":326,"column":4},"end":{"row":330,"column":36},"action":"remove","lines":["v1 = 5 - v2;","    ","    EXPECT_DOUBLE_EQ(5 - 1.5, v1.x);","    EXPECT_DOUBLE_EQ(5 - 2.5, v1.y);","    EXPECT_DOUBLE_EQ(5 - 3.5, v1.z);"]}]}],[{"group":"doc","deltas":[{"start":{"row":316,"column":4},"end":{"row":320,"column":36},"action":"remove","lines":["v1 = v2 - 5;","    ","    EXPECT_DOUBLE_EQ(1.5 - 5, v1.x);","    EXPECT_DOUBLE_EQ(2.5 - 5, v1.y);","    EXPECT_DOUBLE_EQ(3.5 - 5, v1.z);"]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":4},"end":{"row":310,"column":38},"action":"remove","lines":["v1 = v1 - v2;","    ","    EXPECT_DOUBLE_EQ(5.5 - 1.5, v1.x);","    EXPECT_DOUBLE_EQ(6.5 - 2.5, v1.y);","    EXPECT_DOUBLE_EQ(7.5 - 3.5, v1.z);"]}]}],[{"group":"doc","deltas":[{"start":{"row":296,"column":4},"end":{"row":300,"column":36},"action":"remove","lines":["v1 = v1 + 5;","    ","    EXPECT_DOUBLE_EQ(5.5 + 5, v1.x);","    EXPECT_DOUBLE_EQ(6.5 + 5, v1.y);","    EXPECT_DOUBLE_EQ(7.5 + 5, v1.z);"]}]}],[{"group":"doc","deltas":[{"start":{"row":286,"column":4},"end":{"row":290,"column":36},"action":"remove","lines":["v1 = 5 + v2;","    ","    EXPECT_DOUBLE_EQ(5 + 1.5, v1.x);","    EXPECT_DOUBLE_EQ(5 + 2.5, v1.y);","    EXPECT_DOUBLE_EQ(5 + 3.5, v1.z);"]}]}],[{"group":"doc","deltas":[{"start":{"row":241,"column":4},"end":{"row":243,"column":44},"action":"remove","lines":["return os << \"[\" << v.x << \"]\" << \"\\n\"","              << \"[\" << v.y << \"]\" << \"\\n\"            ","              << \"[\" << v.z << \"]\" << \"\\n\"; "]}]}],[{"group":"doc","deltas":[{"start":{"row":229,"column":4},"end":{"row":234,"column":15},"action":"remove","lines":["vector ans = vector();","    ans.x = v.x * scalar;","    ans.y = v.y * scalar;","    ans.z = v.z * scalar;","    ","    return ans;"]}]}],[{"group":"doc","deltas":[{"start":{"row":218,"column":2},"end":{"row":223,"column":15},"action":"remove","lines":["  vector ans = vector();","    ans.x = v.x * scalar;","    ans.y = v.y * scalar;","    ans.z = v.z * scalar;","    ","    return ans;"]}]}],[{"group":"doc","deltas":[{"start":{"row":207,"column":4},"end":{"row":212,"column":19},"action":"remove","lines":["vector ans = vector();","    ans.x = scalar - v2.x;","    ans.y = scalar - v2.y;","    ans.z = scalar - v2.z;","","    return ans;    "]}]}],[{"group":"doc","deltas":[{"start":{"row":196,"column":4},"end":{"row":201,"column":15},"action":"remove","lines":["vector ans = vector();","    ans.x = v1.x - scalar;","    ans.y = v1.y - scalar;","    ans.z = v1.z - scalar;","","    return ans;"]}]}],[{"group":"doc","deltas":[{"start":{"row":185,"column":4},"end":{"row":190,"column":15},"action":"remove","lines":["vector ans = vector();","    ans.x = v1.x - v2.x;","    ans.y = v1.y - v2.y;","    ans.z = v1.z - v2.z;","","    return ans;"]}]}],[{"group":"doc","deltas":[{"start":{"row":174,"column":4},"end":{"row":179,"column":18},"action":"remove","lines":["vector ans = vector();","    ans.x = scalar + v2.x;","    ans.y = scalar + v2.y;","    ans.z = scalar + v2.z;","    ","    return ans;   "]}]}],[{"group":"doc","deltas":[{"start":{"row":163,"column":4},"end":{"row":168,"column":15},"action":"remove","lines":["vector ans = vector();","    ans.x = v1.x + scalar;","    ans.y = v1.y + scalar;","    ans.z = v1.z + scalar;","    ","    return ans;"]}]}],[{"group":"doc","deltas":[{"start":{"row":153,"column":3},"end":{"row":157,"column":15},"action":"remove","lines":[" ans.x = v1.x + v2.x;","    ans.y = v1.y + v2.y;","    ans.z = v1.z + v2.z;","    ","    return ans;"]}]}],[{"group":"doc","deltas":[{"start":{"row":152,"column":3},"end":{"row":153,"column":3},"action":"remove","lines":[" vector ans = vector();","   "]}]}],[{"group":"doc","deltas":[{"start":{"row":133,"column":4},"end":{"row":147,"column":15},"action":"remove","lines":["double ans = 0;","    ","    switch (i) {","        case 1:","            ans = this->x;","            break;","        case 2:","            ans = this->y;","            break;","        case 3:","            ans = this->z;","            break;","    }","    ","    return ans;"]}]}],[{"group":"doc","deltas":[{"start":{"row":119,"column":3},"end":{"row":125,"column":16},"action":"remove","lines":[" ","    vector ans = vector();","    ans.x = -this->x;","    ans.y = -this->y;","    ans.z = -this->z;","","    return ans; "]}]}],[{"group":"doc","deltas":[{"start":{"row":110,"column":3},"end":{"row":114,"column":17},"action":"remove","lines":[" this->x += 1;","    this->y += 1;","    this->z += 1;","    ","    return *this;"]}]}],[{"group":"doc","deltas":[{"start":{"row":104,"column":4},"end":{"row":104,"column":27},"action":"remove","lines":["return (!(*this == v));"]}]}],[{"group":"doc","deltas":[{"start":{"row":82,"column":4},"end":{"row":98,"column":17},"action":"remove","lines":["double eps = 0.0001;","    ","    double a = this->x - v.x; ","    double b = this->y - v.y;","    double c = this->z - v.z;","    ","    if(a<0)","        a *= -1;","    if(b<0)","        b *= -1;","    if(c<0)","        c *= -1;","        ","    if( (a < eps) && (b < eps) && (c < eps) )","        return true;","        ","    return false;"]}]}],[{"group":"doc","deltas":[{"start":{"row":74,"column":4},"end":{"row":76,"column":17},"action":"remove","lines":["*this = *this * scalar;","    ","    return *this;"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":5},"end":{"row":68,"column":17},"action":"remove","lines":["his->x -= v.x;","    this->y -= v.y;","    this->z -= v.z;","    ","    return *this;"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":4},"end":{"row":64,"column":5},"action":"remove","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":54,"column":4},"end":{"row":58,"column":17},"action":"remove","lines":["this->x += v.x;","    this->y += v.y;","    this->z += v.z;","    ","    return *this;"]}]}],[{"group":"doc","deltas":[{"start":{"row":45,"column":4},"end":{"row":49,"column":17},"action":"remove","lines":["this->x = v.x;","    this->y = v.y;","    this->z = v.z;","    ","    return *this;"]}]}],[{"group":"doc","deltas":[{"start":{"row":36,"column":4},"end":{"row":40,"column":21},"action":"remove","lines":["double a = v1.x*v2.x;","    double b = v1.y*v2.y;","    double c = v1.z*v2.z;","    ","    return a + b + c;"]}]}],[{"group":"doc","deltas":[{"start":{"row":25,"column":4},"end":{"row":30,"column":16},"action":"remove","lines":["vector ans = vector();","    ans.x = this->x / scalar;","    ans.y = this->y / scalar;","    ans.z = this->z / scalar;","    ","    return ans; "]}]}],[{"group":"doc","deltas":[{"start":{"row":17,"column":4},"end":{"row":19,"column":16},"action":"remove","lines":["this->x = x;","    this->y = y;","    this->z = z;"]}]}]]},"ace":{"folds":[],"scrolltop":338.5,"scrollleft":0,"selection":{"start":{"row":32,"column":22},"end":{"row":32,"column":25},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":18,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1417036152695,"hash":"cc97951744dfbb643b5239200480d8129be16cba"}